<div class="calendar-header">
  <h1>Events Calendar</h1>
  <% if user_signed_in? && (current_user.organization? || current_user.role == "stakeholder") %>
    <%= link_to "Add Event", new_event_path, class: "button" %>
  <% end %>
</div>

<!-- Calendar container -->
<div id="calendar" 
     data-events='<%= @events.map { |e| { id: e.id, title: e.title, start: e.start_time_iso, end: e.end_time_iso, description: e.description } }.to_json.html_safe %>'>
</div>

<!-- Event Modal -->
<div id="eventModal" class="modal-overlay">
  <div class="modal-content">
    <div class="modal-header">
      <h2 id="modalTitle"></h2>
      <button id="closeModal" class="close-button" aria-label="Close modal">&times;</button>
    </div>
    <div class="modal-body">
      <!-- changed to div for rich text / links -->
      <div id="modalDescription"></div>
      <p><strong>Start:</strong> <span id="modalStart"></span></p>
      <p><strong>End:</strong> <span id="modalEnd"></span></p>
      <% if user_signed_in? && (current_user.organization? || current_user.role == "stakeholder") %>
        <div class="modal-actions">
          <a href="#" id="editEventLink" class="action-button edit-button" title="Edit Event">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
              <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
            </svg>
            Edit
          </a>
        </div>
      <% end %>
    </div>
  </div>
</div>

<!-- FullCalendar CSS -->
<link href='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.8/main.min.css' rel='stylesheet' />
<link href='https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.8/main.min.css' rel='stylesheet' />
<link href='https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@6.1.8/main.min.css' rel='stylesheet' />

<!-- Custom CSS -->
<style>
    .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    #calendar {
        max-width: 1500px;
        margin: 30px auto;
        padding: 20px;
        background: rgb(229, 239, 253);
        border-radius: 10px;
        box-shadow: 0px 0px 15px rgba(0,0,0,0.2);
        min-height: 600px;
    }

    .fc .fc-daygrid-day-number {
        color: black !important;
    }

    .fc-event {
        cursor: pointer;
    }

    .modal-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .modal-content {
        background: white;
        border-radius: 12px;
        max-width: 700px;
        width: 90%;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
        position: relative;
        animation: modalFadeIn 0.3s ease;
    }

    @keyframes modalFadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 20px 20px 10px 20px;
        border-bottom: 1px solid #e0e0e0;
    }

    .modal-header h2 {
        margin: 0;
        font-size: 24px;
        color: #333;
        flex: 1;
    }

    .close-button {
        background: none;
        border: none;
        font-size: 32px;
        color: #999;
        cursor: pointer;
        padding: 0;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        transition: all 0.2s ease;
        margin-left: 10px;
        flex-shrink: 0;
    }

    .close-button:hover {
        background: #f5f5f5;
        color: #333;
        transform: rotate(90deg);
    }

    .modal-body {
        padding: 20px;
    }

    .modal-body p {
        margin: 10px 0;
        color: #555;
        line-height: 1.6;
    }

    /* ðŸ‘‡ Added this for wrapping and clickable links */
    #modalDescription {
        white-space: pre-wrap;
        word-wrap: break-word;
        overflow-wrap: anywhere;
        color: #444;
    }

    #modalDescription a {
        color: #1a73e8;
        text-decoration: underline;
        word-break: break-all;
    }

    .modal-actions {
        display: flex;
        gap: 10px;
        margin-top: 20px;
        padding-top: 15px;
        border-top: 1px solid #e0e0e0;
    }

    .action-button {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        padding: 10px 16px;
        border-radius: 6px;
        text-decoration: none;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
    }

    .edit-button {
        background-color: #2196F3;
        color: white;
    }

    .edit-button:hover {
        background-color: #1976D2;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(33, 150, 243, 0.3);
    }
</style>

<!-- FullCalendar JS -->
<script src='https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.8/index.global.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.8/index.global.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@6.1.8/index.global.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@6.1.8/index.global.min.js'></script>

<script>
(function() {
  let calendar = null;

  function linkifyText(text) {
    if (!text) return "No description";
    const urlRegex = /(https?:\/\/[^\s]+)/g;
    return text.replace(urlRegex, '<a href="$1" target="_blank">$1</a>');
  }

  function initializeCalendar() {
    if (typeof FullCalendar === 'undefined') {
      console.error('FullCalendar not loaded yet');
      setTimeout(initializeCalendar, 100);
      return;
    }

    const calendarEl = document.getElementById('calendar');
    if (!calendarEl) return;

    if (calendar) {
      try { calendar.destroy(); } catch(e) { console.log('Error destroying calendar:', e); }
      calendar = null;
    }

    const events = JSON.parse(calendarEl.dataset.events || '[]');

    calendar = new FullCalendar.Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      headerToolbar: {
        left: 'prev,next today',
        center: 'title',
        right: 'dayGridMonth,timeGridWeek,timeGridDay'
      },
      events: events,
      timeZone: 'local',

      eventClick: function(info) {
        document.getElementById('modalTitle').innerText = info.event.title;
        const descDiv = document.getElementById('modalDescription');
        descDiv.innerHTML = linkifyText(info.event.extendedProps.description || "No description");

        document.getElementById('modalStart').innerText = info.event.start.toLocaleString();
        document.getElementById('modalEnd').innerText = info.event.end ? info.event.end.toLocaleString() : "N/A";

        const eventId = info.event.id;
        const editLink = document.getElementById('editEventLink');
        if (editLink) editLink.href = '/events/' + eventId + '/edit';

        document.getElementById('eventModal').style.display = 'flex';
      }
    });

    calendar.render();
  }

  function attachModalListeners() {
    const closeBtn = document.getElementById('closeModal');
    const modal = document.getElementById('eventModal');

    if (closeBtn && modal) {
      const newCloseBtn = closeBtn.cloneNode(true);
      closeBtn.parentNode.replaceChild(newCloseBtn, closeBtn);

      newCloseBtn.addEventListener('click', () => modal.style.display = 'none');
      modal.addEventListener('click', (e) => { if(e.target === modal) modal.style.display = 'none'; });
    }
  }

  function init() {
    const modal = document.getElementById('eventModal');
    if (modal) modal.style.display = 'none';
    initializeCalendar();
    attachModalListeners();
  }

  document.addEventListener('turbolinks:load', init);
  document.addEventListener('DOMContentLoaded', init);

  if (document.readyState === 'complete' || document.readyState === 'interactive') {
    setTimeout(init, 1);
  }

  document.addEventListener('turbolinks:before-cache', () => {
    if (calendar) {
      try { calendar.destroy(); } catch(e) {}
      calendar = null;
    }
    const modal = document.getElementById('eventModal');
    if (modal) modal.style.display = 'none';
  });
})();
</script>
